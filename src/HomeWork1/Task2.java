package HomeWork1;

public class Task2 {
    public static void main(String[] args) {
        int a = 8;
        int b = 2;

        // System.out.println(--a); // ответ 7 (уменьшили значение операнда 8 на единицу);

        // System.out.println(5 + 2 / 8); //ответ 5 (сначала выполняем "деление" 2/8 = 0.25 => 0, затем выполняем операцию сложения 5 + 0 = 5);

        // System.out.println((5 + 2) / 8); // ответ 0 (сначала выполняем сложение 5+2 и получаем 7, далее выполняем деление 7/8 и получаем 0.875 => 0);

        // System.out.println((5 + b++) / a); // ответ 0 (сначала выполняем преунарную операцию с опернадом b (2), затем выполняем сложение в скобках (5+2), далее 7/8 и получаем 0.875 => 0);

        // System.out.println((5 + b++) / --a); // ответ 1 (сначала выполняем операцию --а (получаем 7), затем выполняем операцию b++ (получаем 2), далее выполняем операцию сложения в скобках (5+2) и делим на 7);

        // System.out.println((5 * 2 >> b++) / --a); // ответ 0 (сначала выполняем операцию --а (получаем 7), затем выполняем операцию b++ (получаем 2), далее выполняем выражение в скобках: умножение 5*2 (получаем 10 -> 00001010) и сдвигаем 00001010 на два бита вправо 00000010 (2), далее выполняем операцию деления 2/7 и получаем 0);

        // System.out.println((5 + 7 > 20 ? 68 : 22 * 2 >> b++) / --a); // ответ 1 (сначала выполняем операцию --а (получаем 7), затем выполняем операцию b++ (получаем 2), далее выполняем выражение в скобках: выполняем умножение 22*2 (44), затем выполняем сложение 5+7, после этого сдвигаем число 44 (00101100) вправо на два бита получаем 00001011 (11) и далее выполняем операцию с тернарным оператором: 12>20 (получаем false), значит берем значение, которое идет после ":", а это 11, далее выполняется операция деление 11/7 => 0);

        // System.out.println((5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> b++) / --a); // ошибка компиляции, потому что в тернарном операторе, один из операднов возрващает результат сравнения, которое является кандитом на деление 7 (--а);

        // System.out.println(6 - 2 > 3 && 12 * 12 <= 119); // ответ false (сначала выполняем умножение 12*12 (144), затем выполняем вычитание 6-2 (4), далее операция "больше чем" (4 > 3) получаем значение "true", затем выполняем операцию "меньше чем или равно" (144 <= 119) и получаем значение "false", последняя операция "условное умножение" true && false (0 * 1 = 0);

        // System.out.println(true && false); // ответ false по определению;

    }
}
